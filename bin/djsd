#!/usr/bin/env ruby

daemon_mode = false

if (%w( -h --help -help help ) & ARGV).length > 0
  puts "usage: djsd [-hvd]"
  puts "option(s):"
  puts "-d | daemon mode (background)"
  puts "starts dotjs server in the foreground. kill with ^C"
  exit
end

if ARGV.include?('-v')
  puts "djsd 2.0"
  exit
end

if ARGV.include?('-d')
  daemon_mode = true
end

require 'webrick'
require 'webrick/https'

dotjs = Class.new(WEBrick::HTTPServlet::AbstractServlet) do
  def do_GET(request, response)
    body = build_body(request.path)

    response.status = body.empty? ? 204 : 200
    if origin = detect_origin(request)
      response['Access-Control-Allow-Origin'] = origin
    end
    response['Content-Type'] = 'text/javascript'
    response.body = body
  end

  def build_body(path)
    files = [File.expand_path("~/.js/default.js")]
    paths = path.gsub('/','').split('.')

    until paths.empty?
      file = File.expand_path("~/.js/#{paths.join('.')}")
      files << file if File.file?(file)
      paths.shift
    end

    body = "// dotjs is working! //\n"

    files.each do |file|
      body << File.read(file) + "\n" if File.file?(file)
    end

    body
  end

  def detect_origin(req)
    path   = req.path
    origin = req.header['origin']
    search = path.gsub('/','').gsub(/\.js$/,'') + '$'

    if origin.length == 1 && path.length != 1 && origin[0].match(search)
      origin[0]
    end
  end
end

ssl_info = DATA.read
ssl_cert = ssl_info.scan(/(-----BEGIN CERTIFICATE-----.+?-----END CERTIFICATE-----)/m)[0][0]
ssl_key  = ssl_info.scan(/(-----BEGIN RSA PRIVATE KEY-----.+?-----END RSA PRIVATE KEY-----)/m)[0][0]

server_options = {
  :BindAddress => "127.0.0.1",
  :Port => 3131,
  :AccessLog => [],
  :SSLEnable => true,
  :SSLVerifyClient => OpenSSL::SSL::VERIFY_NONE,
  :SSLPrivateKey => OpenSSL::PKey::RSA.new(ssl_key),
  :SSLCertificate => OpenSSL::X509::Certificate.new(ssl_cert),
  :SSLCertName => [["CN", WEBrick::Utils::getservername]],
}

if daemon_mode
  server_options[:ServerType] = WEBrick::Daemon
end

server = WEBrick::HTTPServer.new(server_options)
server.mount('/', dotjs)

%w( INT TERM ).each do |sig|
  trap(sig) { server.shutdown }
end

server.start

__END__
-----BEGIN CERTIFICATE-----
MIIB8zCCAVwCCQDeYk543cEQKzANBgkqhkiG9w0BAQUFADA+MQswCQYDVQQGEwJV
UzELMAkGA1UECAwCTUExDjAMBgNVBAoMBWRvdGpzMRIwEAYDVQQDDAlsb2NhbGhv
c3QwHhcNMTMwNzA0MTE0MTE3WhcNMTQwNzA0MTE0MTE3WjA+MQswCQYDVQQGEwJV
UzELMAkGA1UECAwCTUExDjAMBgNVBAoMBWRvdGpzMRIwEAYDVQQDDAlsb2NhbGhv
c3QwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAOPD44LVZTk5ARFsXLPH7Vw6
WbsquV9pGKnaS1OBjMthI3ndDCt2GIj9MjKSga2Br9pPrGp/vY9MqKviGZ/j59W/
9hB9zqOi4h+WLfEPMjnvCe7QpA+kJJ013w2mI/SZv2F3fNtXLbVnLh6PH0Pqs2wR
4E/ez+uSxSvzpILoptfZAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAjoQ8jofY5sQY
OZ7GoWDm9IMKmsy0qiD/iS4TePVVMS8Og5dAzFVm0QjvDecOIvfYoeJjx8NL0yS0
YUivqU+MGYp9i0aqalZm8MqxSnFYjvh3d/5DbDbVJCC65X77x7HbX/NCHnSivGtS
AAp4PQZlUUIBnJn/eJOF9s28cKgfHKY=
-----END CERTIFICATE-----
-----BEGIN RSA PRIVATE KEY-----
MIICXQIBAAKBgQDjw+OC1WU5OQERbFyzx+1cOlm7KrlfaRip2ktTgYzLYSN53Qwr
dhiI/TIykoGtga/aT6xqf72PTKir4hmf4+fVv/YQfc6jouIfli3xDzI57wnu0KQP
pCSdNd8NpiP0mb9hd3zbVy21Zy4ejx9D6rNsEeBP3s/rksUr86SC6KbX2QIDAQAB
AoGAaMS4qHwEfdfs19jio4f5dQ0aLXAvqOWtBKR3NchHvV3HdczqRiuiiZD+QCkI
IYmgHGm9w5dS2NHIXJg6dUPeZaQlu2QirQoqxIQQh0zwDJQbZsRjAnbjiHWvmgxh
rmWbppRzqY+m0dIKM6X9mNA6Y2mNKpxjfZ1a/ql9JrsaV6ECQQD03PmjLFT+XuQa
DvxFrUOywVRdeu4VqV3tufBIE5HWpGLTwTNNl1Cmjq6dJ6Tfn2cN1sf1LqEBOBAO
OZPC7NwdAkEA7h/V+esBeiOfoesgWw+W5ySW/KXsIC/yFEIgK4FBQjr5VvaXPv+7
nkxE7E0PnWKf6RQlAGNEAWtyToQwAdSF7QJBAJeJAXz3/ImHVAbEa177gT/o4TsQ
zrLdI+HxBkC0y7ZX+Uku8X79O8430twzIpe54F7yIsEbYEyO03DaNRWW3AkCQH9b
AYsvuFOFt/vWkDCDrvaiqCop55bzbaqODzyVXby5Y9+x9QRZrBOmwPoM4PwQ4mu7
PWrurFGCENmTc0WXT6UCQQCbzt1A7C1tQxFW/YW1ZUlZOu6DJbXEJEA62JURXgnZ
snfEL5E1/TE+Yg8wEbZYLAQFjqgzQAQgO/pBGprItokh
-----END RSA PRIVATE KEY-----
